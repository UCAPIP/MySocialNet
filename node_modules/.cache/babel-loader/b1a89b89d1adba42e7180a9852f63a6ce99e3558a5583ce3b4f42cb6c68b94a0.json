{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ucapi\\\\Desktop\\\\projects\\\\react-start\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport Contact from './components/Dialogs/Contact';\nimport Message from './components/Dialogs/Message';\nimport Post from './components/Profile/Posts/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet postsArr = [{\n  id: 0,\n  message: 'Слова дауна по имени Иван.',\n  name: 'Иван Иванов',\n  age: 23,\n  countLike: 14\n}, {\n  id: 0,\n  message: 'IDI NHUI LOX.',\n  name: 'GAY DMITROV',\n  age: 5,\n  countLike: 178\n}, {\n  id: 0,\n  message: 'Да мне похуй',\n  name: 'Сергей Сергеев',\n  age: 31,\n  countLike: 23\n}];\nlet contactArr = [{\n  id: 0,\n  name: \"Даун Иваныч\"\n}, {\n  id: 1,\n  name: \"Даун Лохыч\"\n}];\nlet contactNew = contactArr.map(c => /*#__PURE__*/_jsxDEV(Contact, {\n  id: c.id,\n  name: c.name\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this));\nlet messageArr = [{\n  id: 0,\n  message: \"lorem\"\n}, {\n  id: 1,\n  message: \"Lorem ipsum dolor sit amet.\"\n}, {\n  id: 3,\n  message: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Modi, nobis mollitia?\"\n}];\nlet messageNew = messageArr.map(m => /*#__PURE__*/_jsxDEV(Message, {\n  id: m.id,\n  message: m.message\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this));\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {\n    postNew: postsArr,\n    contactNew: contactNew,\n    messageNew: messageNew\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals","map":{"version":3,"names":["React","ReactDOM","App","Contact","Message","Post","jsxDEV","_jsxDEV","postsArr","id","message","name","age","countLike","contactArr","contactNew","map","c","fileName","_jsxFileName","lineNumber","columnNumber","messageArr","messageNew","m","root","createRoot","document","getElementById","render","StrictMode","children","postNew"],"sources":["C:/Users/ucapi/Desktop/projects/react-start/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport Contact from './components/Dialogs/Contact';\nimport Message from './components/Dialogs/Message';\nimport Post from './components/Profile/Posts/Post';\n\n  let postsArr = [\n\t\t{ id: 0, message: 'Слова дауна по имени Иван.', name: 'Иван Иванов', age: 23, countLike: 14 },\n\t\t{ id: 0, message: 'IDI NHUI LOX.', name: 'GAY DMITROV', age: 5, countLike: 178 },\n\t\t{ id: 0, message: 'Да мне похуй', name: 'Сергей Сергеев', age: 31, countLike: 23 }\n\t]\n\n  let contactArr = [\n\t\t{ id: 0, name: \"Даун Иваныч\" },\n\t\t{ id: 1, name: \"Даун Лохыч\" }\n\t]\n\n\tlet contactNew = contactArr.map(c =>\n\t\t<Contact id={c.id} name={c.name} />\n\t);\n\n\tlet messageArr = [\n\t\t{ id: 0, message: \"lorem\" },\n\t\t{ id: 1, message: \"Lorem ipsum dolor sit amet.\" },\n\t\t{ id: 3, message: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Modi, nobis mollitia?\" }\n\t]\n\n\tlet messageNew = messageArr.map(m =>\n\t\t<Message id={m.id} message={m.message} />\n\t);\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App postNew={postsArr} contactNew={contactNew} messageNew={messageNew}/>\n\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,IAAI,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,IAAIC,QAAQ,GAAG,CACf;EAAEC,EAAE,EAAE,CAAC;EAAEC,OAAO,EAAE,4BAA4B;EAAEC,IAAI,EAAE,aAAa;EAAEC,GAAG,EAAE,EAAE;EAAEC,SAAS,EAAE;AAAG,CAAC,EAC7F;EAAEJ,EAAE,EAAE,CAAC;EAAEC,OAAO,EAAE,eAAe;EAAEC,IAAI,EAAE,aAAa;EAAEC,GAAG,EAAE,CAAC;EAAEC,SAAS,EAAE;AAAI,CAAC,EAChF;EAAEJ,EAAE,EAAE,CAAC;EAAEC,OAAO,EAAE,cAAc;EAAEC,IAAI,EAAE,gBAAgB;EAAEC,GAAG,EAAE,EAAE;EAAEC,SAAS,EAAE;AAAG,CAAC,CAClF;AAEA,IAAIC,UAAU,GAAG,CACjB;EAAEL,EAAE,EAAE,CAAC;EAAEE,IAAI,EAAE;AAAc,CAAC,EAC9B;EAAEF,EAAE,EAAE,CAAC;EAAEE,IAAI,EAAE;AAAa,CAAC,CAC7B;AAED,IAAII,UAAU,GAAGD,UAAU,CAACE,GAAG,CAACC,CAAC,iBAChCV,OAAA,CAACJ,OAAO;EAACM,EAAE,EAAEQ,CAAC,CAACR,EAAG;EAACE,IAAI,EAAEM,CAAC,CAACN;AAAK;EAAAO,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAG,CACnC;AAED,IAAIC,UAAU,GAAG,CAChB;EAAEb,EAAE,EAAE,CAAC;EAAEC,OAAO,EAAE;AAAQ,CAAC,EAC3B;EAAED,EAAE,EAAE,CAAC;EAAEC,OAAO,EAAE;AAA8B,CAAC,EACjD;EAAED,EAAE,EAAE,CAAC;EAAEC,OAAO,EAAE;AAAiF,CAAC,CACpG;AAED,IAAIa,UAAU,GAAGD,UAAU,CAACN,GAAG,CAACQ,CAAC,iBAChCjB,OAAA,CAACH,OAAO;EAACK,EAAE,EAAEe,CAAC,CAACf,EAAG;EAACC,OAAO,EAAEc,CAAC,CAACd;AAAQ;EAAAQ,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAG,CACzC;AAGF,MAAMI,IAAI,GAAGxB,QAAQ,CAACyB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTtB,OAAA,CAACP,KAAK,CAAC8B,UAAU;EAAAC,QAAA,eACfxB,OAAA,CAACL,GAAG;IAAC8B,OAAO,EAAExB,QAAS;IAACO,UAAU,EAAEA,UAAW;IAACQ,UAAU,EAAEA;EAAW;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAE;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAExD,CACpB;;AAED;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}