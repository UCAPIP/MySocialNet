{"ast":null,"code":"import { applyMiddleware, combineReducers, legacy_createStore as createStore } from 'redux';\nimport dialogsReducer from './dialogsReducer';\nimport navBarReducer from './navBarReducer';\nimport profileReducer from './profileReducer';\nimport usersReducer from './usersReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from \"redux-devtools-extension\";\nimport userReducer from './userReducer';\nimport fileReducer from './fileReducer';\nlet reducers = combineReducers({\n  profile: profileReducer,\n  dialogs: dialogsReducer,\n  navBar: navBarReducer,\n  users: usersReducer,\n  user: userReducer,\n  // -- с информацией о пользователе\n  files: fileReducer // -- с информацией о файлах, получаемых с сервера\n});\n\nexport let store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));","map":{"version":3,"names":["applyMiddleware","combineReducers","legacy_createStore","createStore","dialogsReducer","navBarReducer","profileReducer","usersReducer","composeWithDevTools","thunk","userReducer","fileReducer","reducers","profile","dialogs","navBar","users","user","files","store"],"sources":["C:/Users/ucapi/Desktop/SN/MySocialNet/src/Redux/reduxStore.js"],"sourcesContent":["import { applyMiddleware, combineReducers, legacy_createStore as createStore} from 'redux'\r\nimport dialogsReducer from './dialogsReducer';\r\nimport navBarReducer from './navBarReducer';\r\nimport profileReducer from './profileReducer';\r\nimport usersReducer from './usersReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport thunk from \"redux-devtools-extension\";\r\nimport userReducer from './userReducer';\r\nimport fileReducer from './fileReducer';\r\n\r\n\r\nlet reducers = combineReducers({\r\n\tprofile: profileReducer,\r\n\tdialogs: dialogsReducer,\r\n\tnavBar: navBarReducer,\r\n\tusers: usersReducer,\t\r\n\tuser: userReducer, // -- с информацией о пользователе\r\n\tfiles: fileReducer // -- с информацией о файлах, получаемых с сервера\r\n});\r\n\r\nexport let store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,eAAe,EAAEC,kBAAkB,IAAIC,WAAW,QAAO,OAAO;AAC1F,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,mBAAmB,QAAQ,0CAA0C;AAC9E,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAGvC,IAAIC,QAAQ,GAAGX,eAAe,CAAC;EAC9BY,OAAO,EAAEP,cAAc;EACvBQ,OAAO,EAAEV,cAAc;EACvBW,MAAM,EAAEV,aAAa;EACrBW,KAAK,EAAET,YAAY;EACnBU,IAAI,EAAEP,WAAW;EAAE;EACnBQ,KAAK,EAAEP,WAAW,CAAC;AACpB,CAAC,CAAC;;AAEF,OAAO,IAAIQ,KAAK,GAAGhB,WAAW,CAACS,QAAQ,EAAEJ,mBAAmB,CAACR,eAAe,CAACS,KAAK,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}