{"ast":null,"code":"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from \"../../Redux/dialogsReducer\";\nimport Messages from \"./Messages\";\n\n// const MessagesContainer = (props) => {\n\n// \tlet state = props.store.getState();\n\n// \tlet sendMessage = () => {\n// \t\tprops.store.dispatch(addMessageActionCreator());\n// \t}\n\n// \tlet onChangeText = (text) => {\n// \t\tlet textUpdate = updateNewMessageTextActionCreator(text);\n// \t\tprops.store.dispatch(textUpdate);\n// \t}\n\n// \treturn (<Messages sendMessage={sendMessage} onChangeText={onChangeText}\n// \t\tmessagesData={state.dialogs.messageArr} usersDialogs={state.dialogs.newMessageText}/>);\n// }\n\nlet mapStateToProps = state => {\n  return {\n    messagesData: state.dialogs.messageArr,\n    usersDialogs: state.dialogs.newMessageText\n  };\n};\nlet mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: () => {\n      dispatch(addMessageActionCreator());\n    },\n    onChangeText: text => {\n      let textUpdate = updateNewMessageTextActionCreator(text);\n      dispatch(textUpdate);\n    }\n  };\n};\nconst MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\nexport default MessagesContainer;","map":{"version":3,"names":["React","connect","addMessageActionCreator","updateNewMessageTextActionCreator","Messages","mapStateToProps","state","messagesData","dialogs","messageArr","usersDialogs","newMessageText","mapDispatchToProps","dispatch","sendMessage","onChangeText","text","textUpdate","MessagesContainer"],"sources":["C:/Users/ucapi/Desktop/SN/MySocialNet/src/components/Dialogs/MessagesContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from \"../../Redux/dialogsReducer\";\r\nimport Messages from \"./Messages\";\r\n\r\n\r\n// const MessagesContainer = (props) => {\r\n\r\n// \tlet state = props.store.getState();\r\n\r\n// \tlet sendMessage = () => {\r\n// \t\tprops.store.dispatch(addMessageActionCreator());\r\n// \t}\r\n\r\n// \tlet onChangeText = (text) => {\r\n// \t\tlet textUpdate = updateNewMessageTextActionCreator(text);\r\n// \t\tprops.store.dispatch(textUpdate);\r\n// \t}\r\n\r\n// \treturn (<Messages sendMessage={sendMessage} onChangeText={onChangeText}\r\n// \t\tmessagesData={state.dialogs.messageArr} usersDialogs={state.dialogs.newMessageText}/>);\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tmessagesData: state.dialogs.messageArr,\r\n\t\tusersDialogs: state.dialogs.newMessageText\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMessage: () => {\r\n\t\t\tdispatch(addMessageActionCreator());\r\n\t\t},\r\n\t\tonChangeText: (text) => {\r\n\t\t\tlet textUpdate = updateNewMessageTextActionCreator(text);\r\n\t\t\tdispatch(textUpdate);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\r\n\r\nexport default MessagesContainer;\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,uBAAuB,EAAEC,iCAAiC,QAAQ,4BAA4B;AACvG,OAAOC,QAAQ,MAAM,YAAY;;AAGjC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAIC,KAAK,IAAK;EAChC,OAAO;IACNC,YAAY,EAAED,KAAK,CAACE,OAAO,CAACC,UAAU;IACtCC,YAAY,EAAEJ,KAAK,CAACE,OAAO,CAACG;EAC7B,CAAC;AACF,CAAC;AAED,IAAIC,kBAAkB,GAAIC,QAAQ,IAAK;EACtC,OAAO;IACNC,WAAW,EAAEA,CAAA,KAAM;MAClBD,QAAQ,CAACX,uBAAuB,EAAE,CAAC;IACpC,CAAC;IACDa,YAAY,EAAGC,IAAI,IAAK;MACvB,IAAIC,UAAU,GAAGd,iCAAiC,CAACa,IAAI,CAAC;MACxDH,QAAQ,CAACI,UAAU,CAAC;IACrB;EACD,CAAC;AACF,CAAC;AAED,MAAMC,iBAAiB,GAAGjB,OAAO,CAACI,eAAe,EAAEO,kBAAkB,CAAC,CAACR,QAAQ,CAAC;AAEhF,eAAec,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}