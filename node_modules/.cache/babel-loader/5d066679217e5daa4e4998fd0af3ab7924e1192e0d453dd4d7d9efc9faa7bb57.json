{"ast":null,"code":"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../Redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\n\n// const MyPostsContainer = (props) => {\n\n// \tlet state = props.store.getState();\n\n// \tlet addPost = () => {\n// \t\tprops.store.dispatch(addPostActionCreator());\n// \t}\n\n// \tlet onChangePost = (text) => {\n// \t\tlet action = updateNewPostTextActionCreator(text);\n// \t\tprops.store.dispatch(action);\n// \t}\n\n// \treturn (<MyPosts updateNewPostText={onChangePost} addPost={addPost} postData={state.profile.postsArr} \n// \t\tnewPostText={state.profile.newPostText} />);\n\n// }\n\nlet mapStateToProps = state => {\n  return {\n    postData: state.profile.postsArr,\n    newPostText: state.profile.newPostText\n  };\n};\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewPostText: text => {\n      let action = updateNewPostTextActionCreator(text);\n      dispatch(action);\n    },\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    }\n  };\n};\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;","map":{"version":3,"names":["React","connect","addPostActionCreator","updateNewPostTextActionCreator","MyPosts","mapStateToProps","state","postData","profile","postsArr","newPostText","mapDispatchToProps","dispatch","updateNewPostText","text","action","addPost","MyPostsContainer"],"sources":["C:/Users/ucapi/Desktop/SN/MySocialNet/src/components/Profile/MyPosts/MyPostsContainer.jsx"],"sourcesContent":["import React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n// const MyPostsContainer = (props) => {\r\n\t\r\n// \tlet state = props.store.getState();\r\n\t\r\n\r\n// \tlet addPost = () => {\r\n// \t\tprops.store.dispatch(addPostActionCreator());\r\n// \t}\r\n\r\n// \tlet onChangePost = (text) => {\r\n// \t\tlet action = updateNewPostTextActionCreator(text);\r\n// \t\tprops.store.dispatch(action);\r\n// \t}\r\n\t\r\n// \treturn (<MyPosts updateNewPostText={onChangePost} addPost={addPost} postData={state.profile.postsArr} \r\n// \t\tnewPostText={state.profile.newPostText} />);\r\n\t\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tpostData: state.profile.postsArr,\r\n\t\tnewPostText: state.profile.newPostText\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\t\r\n\treturn {\r\n\t\tupdateNewPostText: (text) => {\r\n\t\t\tlet action = updateNewPostTextActionCreator(text);\r\n\t\t\tdispatch(action);\r\n\t\t},\r\n\t\taddPost: () => {\r\n\t\t\tdispatch(addPostActionCreator());\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,oBAAoB,EAAEC,8BAA8B,QAAQ,+BAA+B;AACpG,OAAOC,OAAO,MAAM,WAAW;;AAE/B;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,IAAIC,eAAe,GAAIC,KAAK,IAAK;EAChC,OAAO;IACNC,QAAQ,EAAED,KAAK,CAACE,OAAO,CAACC,QAAQ;IAChCC,WAAW,EAAEJ,KAAK,CAACE,OAAO,CAACE;EAC5B,CAAC;AACF,CAAC;AAED,IAAIC,kBAAkB,GAAIC,QAAQ,IAAK;EACtC,OAAO;IACNC,iBAAiB,EAAGC,IAAI,IAAK;MAC5B,IAAIC,MAAM,GAAGZ,8BAA8B,CAACW,IAAI,CAAC;MACjDF,QAAQ,CAACG,MAAM,CAAC;IACjB,CAAC;IACDC,OAAO,EAAEA,CAAA,KAAM;MACdJ,QAAQ,CAACV,oBAAoB,EAAE,CAAC;IACjC;EACD,CAAC;AACF,CAAC;AAED,MAAMe,gBAAgB,GAAGhB,OAAO,CAACI,eAAe,EAAEM,kBAAkB,CAAC,CAACP,OAAO,CAAC;AAE9E,eAAea,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}