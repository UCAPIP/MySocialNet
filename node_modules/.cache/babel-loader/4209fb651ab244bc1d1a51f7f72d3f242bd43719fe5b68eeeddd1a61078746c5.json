{"ast":null,"code":"const ADD_MESSAGE = \"ADD-MESSAGE\";\nconst UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\nconst ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nconst UPLOAD_CONTACTS = \"UPLOAD_CONTACTS\";\nlet store = {\n  _state: {\n    profile: {\n      postsArr: [{\n        id: 0,\n        message: 'Слова дауна по имени Иван.',\n        name: 'Иван Иванов',\n        age: 23,\n        countLike: 14\n      }, {\n        id: 0,\n        message: 'IDI NHUI LOX.',\n        name: 'GAY DMITROV',\n        age: 5,\n        countLike: 178\n      }, {\n        id: 0,\n        message: 'Да мне похуй',\n        name: 'Сергей Сергеев',\n        age: 31,\n        countLike: 23\n      }],\n      newPostText: ''\n    },\n    dialogs: {\n      contactArr: [{\n        id: 0,\n        name: \"Даун Иваныч\"\n      }, {\n        id: 1,\n        name: \"Даун Лохыч\"\n      }],\n      messageArr: [{\n        id: 0,\n        message: \"lorem\"\n      }, {\n        id: 1,\n        message: \"Lorem ipsum dolor sit amet.\"\n      }, {\n        id: 3,\n        message: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Modi, nobis mollitia?\"\n      }],\n      newMessageText: ''\n    },\n    navBar: {}\n  },\n  _reRenderTree() {},\n  getState() {\n    return this._state;\n  },\n  subscribe(observer) {\n    this._reRenderTree = observer;\n  },\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 0,\n        message: this._state.profile.newPostText,\n        name: \"Ivan\",\n        age: 0,\n        countLike: 0\n      };\n      this._state.profile.postsArr.push(newPost);\n      this._state.profile.newPostText = '';\n      this._reRenderTree(this._state);\n    } else if (action.type === ADD_MESSAGE) {\n      let newMessage = {\n        id: 0,\n        message: this._state.dialogs.newMessageText\n      };\n      this._state.dialogs.messageArr.push(newMessage);\n      this._state.dialogs.newMessageText = '';\n      this._reRenderTree(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profile.newPostText = action.newText;\n      this._reRenderTree(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_TEXT) {\n      this._state.dialogs.newMessageText = action.newText;\n      this._reRenderTree(this._state);\n    } else if (action.type === UPLOAD_CONTACTS) {\n      this._state.navBar = this._state.dialogs.contactArr;\n      this._reRenderTree(this._state);\n    }\n  }\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const addMessageActionCreator = () => ({\n  type: ADD_MESSAGE\n});\nexport const updateNewMessageTextActionCreator = text => ({\n  type: UPDATE_NEW_MESSAGE_TEXT,\n  newText: text\n});\nexport default store;\nWindow.store = store;","map":{"version":3,"names":["ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","ADD_POST","UPDATE_NEW_POST_TEXT","UPLOAD_CONTACTS","store","_state","profile","postsArr","id","message","name","age","countLike","newPostText","dialogs","contactArr","messageArr","newMessageText","navBar","_reRenderTree","getState","subscribe","observer","dispatch","action","type","newPost","push","newMessage","newText","addPostActionCreator","updateNewPostTextActionCreator","text","addMessageActionCreator","updateNewMessageTextActionCreator","Window"],"sources":["C:/Users/ucapi/Desktop/SN/MySocialNet/src/Redux/State.js"],"sourcesContent":["const ADD_MESSAGE = \"ADD-MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\n\r\nconst UPLOAD_CONTACTS = \"UPLOAD_CONTACTS\";\r\n\r\nlet store = {\r\n\t\r\n\t_state: {\r\n\t\tprofile: {\r\n\t\t\tpostsArr: [\r\n\t\t\t{ id: 0, message: 'Слова дауна по имени Иван.', name: 'Иван Иванов', age: 23, countLike: 14 },\r\n\t\t\t{ id: 0, message: 'IDI NHUI LOX.', name: 'GAY DMITROV', age: 5, countLike: 178 },\r\n\t\t\t{ id: 0, message: 'Да мне похуй', name: 'Сергей Сергеев', age: 31, countLike: 23 }\r\n\t\t\t],\r\n\t\t\tnewPostText: ''\t\r\n\t\t},\r\n\r\n\t\tdialogs: {\r\n\t\t\tcontactArr: [\r\n\t\t\t{ id: 0, name: \"Даун Иваныч\" },\r\n\t\t\t{ id: 1, name: \"Даун Лохыч\" }\r\n\t\t\t],\r\n\t\t\tmessageArr: [\r\n\t\t\t{ id: 0, message: \"lorem\" },\r\n\t\t\t{ id: 1, message: \"Lorem ipsum dolor sit amet.\" },\r\n\t\t\t{ id: 3, message: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Modi, nobis mollitia?\" }\r\n\t\t\t],\r\n\t\t\tnewMessageText: ''\r\n\t\t},\r\n\r\n\t\tnavBar: {},\r\n\t},\r\n\r\n\t_reRenderTree() {\r\n\t},\r\n\t\r\n\tgetState() {\r\n\t\treturn this._state;\r\n\t},\r\n\tsubscribe(observer) {\r\n\t\tthis._reRenderTree = observer;\r\n\t},\r\n\t\r\n\tdispatch(action) {\r\n\t\tif (action.type === ADD_POST) {\r\n\t\t\tlet newPost = {\r\n\t\t\t\tid: 0,\r\n\t\t\t\tmessage: this._state.profile.newPostText,\r\n\t\t\t\tname: \"Ivan\",\r\n\t\t\t\tage: 0,\r\n\t\t\t\tcountLike:0\r\n\t\t\t}\r\n\t\t\tthis._state.profile.postsArr.push(newPost);\r\n\t\t\tthis._state.profile.newPostText = '';\r\n\t\t\tthis._reRenderTree(this._state);\r\n\t\t} else if (action.type === ADD_MESSAGE) {\r\n\t\t\t\tlet newMessage = {\r\n\t\t\t\tid: 0,\r\n\t\t\t\tmessage: this._state.dialogs.newMessageText\r\n\t\t\t}\r\n\t\t\tthis._state.dialogs.messageArr.push(newMessage);\r\n\t\t\tthis._state.dialogs.newMessageText = '';\r\n\t\t\tthis._reRenderTree(this._state);\r\n\t\t} else if (action.type === UPDATE_NEW_POST_TEXT) {\r\n\t\t\tthis._state.profile.newPostText = action.newText;\r\n\t\t\tthis._reRenderTree(this._state);\r\n\t\t} else if (action.type === UPDATE_NEW_MESSAGE_TEXT) {\r\n\t\t\tthis._state.dialogs.newMessageText = action.newText;\r\n\t\t\tthis._reRenderTree(this._state);\r\n\t\t} else if (action.type === UPLOAD_CONTACTS) {\r\n\t\t\tthis._state.navBar = this._state.dialogs.contactArr;\r\n\t\t\tthis._reRenderTree(this._state);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST });\r\nexport const updateNewPostTextActionCreator = (text) => \r\n({ type: UPDATE_NEW_POST_TEXT, newText: text });\r\n\r\nexport const addMessageActionCreator = () => ({ type: ADD_MESSAGE });\r\nexport const updateNewMessageTextActionCreator = (text) => \r\n({ type: UPDATE_NEW_MESSAGE_TEXT, newText: text });\r\n\r\n\texport default store;\r\n\tWindow.store = store;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}